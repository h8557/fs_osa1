{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\harry\\\\fullstack\\\\osa1\\\\unicafe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\harry\\\\fullstack\\\\osa1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, props.text);\n\nconst Feedback = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"give feedback\"), React.createElement(Button, {\n  handleClick: () => setToValue(1000),\n  text: \"good\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}), React.createElement(Button, {\n  handleClick: () => setToValue(0),\n  text: \"neutral\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}), React.createElement(Button, {\n  handleClick: () => setToValue(value + 1),\n  text: \"bad\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}));\n\nconst Statistics = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"statistics \"), \"good \", props.good, \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), \"neutral \", props.neutral, \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}), \"bad \", props.bad, \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}));\n\nconst App = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/harry/fullstack/osa1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","props","handleClick","text","Feedback","setToValue","value","Statistics","good","neutral","bad","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IACX;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKD,KAAK,CAACE,IADX,CADJ;;AAMA,MAAMC,QAAQ,GAAG,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,MAAD;AAAQ,EAAA,WAAW,EAAE,MAAMC,UAAU,CAAC,IAAD,CAArC;AAA6C,EAAA,IAAI,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,MAAD;AAAQ,EAAA,WAAW,EAAE,MAAMA,UAAU,CAAC,CAAD,CAArC;AAA0C,EAAA,IAAI,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,EAII,oBAAC,MAAD;AAAQ,EAAA,WAAW,EAAE,MAAMA,UAAU,CAACC,KAAK,GAAG,CAAT,CAArC;AAAkD,EAAA,IAAI,EAAC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,CADR;;AASA,MAAMC,UAAU,GAAIN,KAAD,IACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,WAEUA,KAAK,CAACO,IAFhB,OAEsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFtB,cAGaP,KAAK,CAACQ,OAHnB,OAG4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAH5B,UAISR,KAAK,CAACS,GAJf,OAIoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJpB,CADJ;;AASA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACUb,QAAQ,CAAC,CAAD,CADlB;AAAA;AAAA,QACPU,IADO;AAAA,QACDI,OADC;;AAAA,qBAEgBd,QAAQ,CAAC,CAAD,CAFxB;AAAA;AAAA,QAEPW,OAFO;AAAA,QAEEI,UAFF;;AAAA,qBAGQf,QAAQ,CAAC,CAAD,CAHhB;AAAA;AAAA,QAGPY,GAHO;AAAA,QAGFI,MAHE;;AAKd,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEN,IAAlB;AAAwB,IAAA,OAAO,EAAEC,OAAjC;AAA0C,IAAA,GAAG,EAAEC,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAXD;;AAaAX,QAAQ,CAACgB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) => (\n    <button onClick={props.handleClick}>\n        {props.text}\n    </button>\n)\n\nconst Feedback = () => (\n        <div>\n            <h1>give feedback</h1>\n            <Button handleClick={() => setToValue(1000)} text=\"good\" />\n            <Button handleClick={() => setToValue(0)} text=\"neutral\" />\n            <Button handleClick={() => setToValue(value + 1)} text=\"bad\" />\n        </div>\n)\n\nconst Statistics = (props) => (\n    <div>\n        <h1>statistics </h1>\n        good {props.good} <br />\n        neutral {props.neutral} <br />\n        bad {props.bad} <br />\n    </div>\n)\n\nconst App = () => {\n    const [good, setGood] = useState(0)\n    const [neutral, setNeutral] = useState(0)\n    const [bad, setBad] = useState(0)\n\n    return (\n        <div>\n            <Feedback />\n            <Statistics good={good} neutral={neutral} bad={bad} />\n        </div>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}