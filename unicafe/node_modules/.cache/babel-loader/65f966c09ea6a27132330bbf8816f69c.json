{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\harry\\\\fullstack\\\\osa1\\\\unicafe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\harry\\\\fullstack\\\\osa1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, props.text);\n\nconst Header = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, props.text));\n\nconst Statistic = props => React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, props.text), \" \", React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, props.value));\n\nconst Statistics = props => {\n  const all = props.good + props.neutral + props.bad;\n  const positive = 100 * props.good / all;\n  const average = (props.good - props.bad) / all;\n  if (all === 0) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"statistics \"), \"No feedback given \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"statistics \"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Statistic, {\n    text: \"good\",\n    value: props.good,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"neutral\",\n    value: props.neutral,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"bad\",\n    value: props.bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"all\",\n    value: all,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"average\",\n    value: average,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"positive\",\n    value: positive + \" %\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })));\n};\n\nconst App = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Header, {\n    text: \"give feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => setGood(good + 1),\n    text: \"good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => setNeutral(neutral + 1),\n    text: \"neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => setBad(bad + 1),\n    text: \"bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/harry/fullstack/osa1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","props","handleClick","text","Header","Statistic","value","Statistics","all","good","neutral","bad","positive","average","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = props => (\n    <button onClick={props.handleClick}>\n        {props.text}\n    </button>\n)\n\nconst Header = props => (\n        <div>\n            <h1>{props.text}</h1>\n        </div>\n)\n\nconst Statistic = props => (\n        <tr><td>{props.text}</td> <td>{props.value}</td></tr>\n)\n\nconst Statistics = props => {\n    const all = props.good + props.neutral + props.bad\n    const positive = 100 * props.good / all\n    const average = (props.good - props.bad) / all\n\n    if (all === 0) return (\n        <div>\n            <h1>statistics </h1>\n            No feedback given <br />\n        </div>\n    )\n\n    return (\n        <div>\n            <h1>statistics </h1>\n            <table>\n                <Statistic text = \"good\" value = {props.good} />\n                <Statistic text = \"neutral\" value = {props.neutral} />\n                <Statistic text = \"bad\" value = {props.bad} />\n                <Statistic text = \"all\" value = {all} />\n                <Statistic text = \"average\" value = {average} />\n                <Statistic text = \"positive\" value = {positive + \" %\"} />\n            </table>\n        </div>\n    )\n}\n\nconst App = () => {\n    const [good, setGood] = useState(0)\n    const [neutral, setNeutral] = useState(0)\n    const [bad, setBad] = useState(0)\n\n    return (\n        <div>\n            <Header text = \"give feedback\" />\n            <Button handleClick={() => setGood(good + 1)} text = \"good\" />\n            <Button handleClick={() => setNeutral(neutral + 1)} text = \"neutral\" />\n            <Button handleClick={() => setBad(bad + 1)} text = \"bad\" />\n            <Statistics good = {good} neutral = {neutral} bad = {bad} />\n        </div>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}